#
# wm independent hotkeys
#

# terminal emulator
super + Return
	alacritty
# program launcher
super + d
	rofi -show drun

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd
#Toggle plank dock
super + space
	plank-toggle.sh

super + w
	chromium
	
super + h
	thunar
	
	
XF86AudioPlay	
    playpause.sh 

XF86AudioNext
	next.sh 

XF86AudioPrev
    prev.sh 
    
XF86AudioRaiseVolume
	amixer -D pulse set Master 5%+ 
	
XF86AudioLowerVolume
	amixer -D pulse set Master 5%-

XF86AudioMute
	amixer -D pulse set Master toggler	
    
	
#
# bspwm hotkeys
#
# Remove current tab from tabbed
super + shift + r
        tabc.sh $(bspc query -N -n focused) remove

# At given direction: join two windows into a new tabbed or add window to an existing tabbed
super + shift + {Left,Down,Up,Right}
        tabc.sh $(bspc query -N -n {west,south,north,east}) add $(bspc query -N -n focused)
# quit/restart bspwm
super + alt + {q,r}
	pkill redshift-gtk && pkill redshift & bspc {quit,wm -r} 

# close and kill
super + {_,shift + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.window

super + shift + m
    bspc node -n last.!automatic

alt + Tab
	  bspc node -f last

XF86MonBrightnessDown
     xbacklight -dec 10 && echo `xbacklight` > /tmp/volumepipe
     
XF86MonBrightnessUp
      xbacklight -inc 10 && echo `xbacklight` > /tmp/volumepipe
	
super + r
	alacritty -e ranger
     
    
#
# state/flags
#

# set the window state
super + {t,alt + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel


#change orientation
super + shift + Tab
	bspc node @/ -R 90

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
	
Print
	maim ~/Pictures/Screenshots/$(date +%s).png && notify-send "Maim" "Screenshot Captured"

shift + Print
	maim -s -o | xclip -selection clipboard -t image/png	
#Ytop
super + shift + a
	alacritty -e ytop
super + e
	rofi -show power-menu -modi power-menu:rofi-power-menu
super + alt + shift + r
	pkill picom && picom -b
super + ctrl + m
	exec --no-startup-id /bin/mute-notif.sh

